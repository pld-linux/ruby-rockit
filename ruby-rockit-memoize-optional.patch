diff -ur rockit-0-3-8-orig/lib/lalr_parsetable_generator.rb rockit-0-3-8/lib/lalr_parsetable_generator.rb
--- rockit-0-3-8-orig/lib/lalr_parsetable_generator.rb	2001-10-26 14:41:47.000000000 -0600
+++ rockit-0-3-8/lib/lalr_parsetable_generator.rb	2004-02-01 01:42:41.067376806 -0700
@@ -1,6 +1,9 @@
 require 'grammar'
 require 'parse_table'
-require 'memoize' # COMMENT OUT if you don't have Memoize
+begin
+	require 'memoize' 
+rescue LoadError 
+end
 require 'parsetable_generation'
 require 'reduce_actions_generator'
 
diff -ur rockit-0-3-8-orig/lib/token.rb rockit-0-3-8/lib/token.rb
--- rockit-0-3-8-orig/lib/token.rb	2001-10-26 14:41:47.000000000 -0600
+++ rockit-0-3-8/lib/token.rb	2004-02-01 01:43:23.718423353 -0700
@@ -4,7 +4,7 @@
 
 class TokenRegexp < Regexp
   def initialize(aStringOrRegexp)
-    if aStringOrRegexp.type == String
+    if aStringOrRegexp.class == String
       @string = aStringOrRegexp
       @string = "^(" + @string + ")" unless @string[0,1] == "^"
       super @string
@@ -28,7 +28,7 @@
 
 # Short hands for composing token regexp's
 def tr(aStringOrRegexp)
-  aStringOrRegexp = aStringOrRegexp.source if aStringOrRegexp.type == Regexp
+  aStringOrRegexp = aStringOrRegexp.source if aStringOrRegexp.class == Regexp
   TokenRegexp.new(aStringOrRegexp)
 end
 
@@ -84,7 +84,7 @@
   end
 
   def ==(other)
-    other.type == self.type and 
+    other.class == self.class and 
       other.name == name and
       other.regexp.inspect == regexp.inspect and
       other.skip == skip
@@ -139,7 +139,7 @@
   end
 
   def ==(other)
-    other.type == self.type
+    other.class == self.class
   end
 end
 
@@ -152,7 +152,7 @@
   end
 
   def ==(other)
-    other.type == self.type
+    other.class == self.class
   end
 end
 
@@ -195,7 +195,7 @@
 end
 
 def t(name, re, *options)
-  if re.type == String
+  if re.class == String
     StringToken.new("StrToken" + re.hash.inspect, re)
   else
     Token.new(name, re, *options)
Only in rockit-0-3-8/lib: token.rb~
